{"title":"Technical Appendix","markdown":{"yaml":{"title":"Technical Appendix","format":"html"},"headingText":"Load packages","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: False\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(scales)\nlibrary(RColorBrewer)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(tigris)\nlibrary(patchwork)\nlibrary(here)\n\noptions(tigris_use_cache = TRUE, tigris_progress = FALSE) \n```\n\n# PHASE 1: DATA PREPARATION\n\n## 1.1 Load and Philadelphia house sales data\n```{r}\n# Load Philly Property Sales data\nphl_sales <- read_csv(\"../data/raw/opa_properties_public.csv\", show_col_types = FALSE)\n```\n\n### Filter to residential properties, 2023-2024 sales\n```{r}\n# Check data types\n# glimpse(phl_sales)\n\nphl_sales_res_23_24 <- phl_sales |>\n  filter(\n    category_code == 1, # Residential\n    year(sale_date) %in% c(2023, 2024), # 2023-24 sales\n    !is.na(category_code) & !is.na(sale_date) # Handle nulls\n  )\n```\n\n### Remove obvious errors\n```{r}\nphl_sales_clean <- phl_sales_res_23_24 |>\n  filter(\n    # Some sale_price are unrealistically too low ($0, $1 etc.)\n    sale_price >= 10000,\n    # Exclude homes with 0 bathrooms\n    number_of_bathrooms > 0,\n    # Some areas are unrealistically low (0, 1, etc.)\n    total_area > 1,\n    # Some 0's remain in total_liveable_area after first area filter\n    total_livable_area > 0,\n    # Filter our unrealistic year built\n    year_built >= 1750\n    ) \n```\n\n### Handle missing values\n\n```{r}\n# Check how many features have NA values\n# sum(is.na(phl_sales_clean$number_of_bedrooms))\n# sum(is.na(phl_sales_clean$number_of_bathrooms))\n# sum(is.na(phl_sales_clean$total_livable_area))\n# sum(is.na(phl_sales_clean$year_built))\n\n# Remove the 2 observations with NA values for number of bedrooms\nphl_sales_clean <- phl_sales_clean |>\n  filter(\n    !is.na(number_of_bedrooms)\n  )\n```\n\n\n### Document all cleaning decisions\n\n\n- Our methodology for cleaning the Philadelphia home sales data is to focus on the features used in our model. As a group, we decided on the following independent variables to consider in our data exploration and model building to be: number of bathrooms, number of bedrooms, total livable area, and year built. We recognize that there is some risk of collinearity between these structural features, which will later be monitored and addressed if needed in the model building stage. Additionally, we also had to clean the sales price column since this is the variable we aim to predict in our model.\n\n\n- Filter for only **residential properties** & **sales made in 2023-24** (per instructions).\n\n\n- Filter for **realistic sales price** >= $10,000.\n\n\n- Filter for houses with **at least 1 bathroom**. We will keep observations where **number of bedrooms = 0** as this likely signifies a studio apartment. However, it is not feasible for homes to have zero bathrooms, so we will enforce a constraint that a home must have at least 1 bathroom to preserve data integrity.\n\n\n- Filter for **realistic total area** > 1 sq ft & **realistic total livable area** > 0 sq ft.\n\n\n- Filter for **year built** >= 1750 (some homes were built in year 0).\n\n\n- **Handle missing values:** We removed any missing values in our dependent variable of sales price, since it is crucial we have a true and accurate measure for prediction. We also checked which of our predictor variables had NA values after filtering. Only number of bedrooms had 2 remaining NA values. The rest had no NA values. To remedy this, we will remove the 2 observations from our data. Note, if there was substantial missing values in our predictors, we could use strategies such as imputing the NA values with the mean or median to use when building our model. \n\n\n## 1.2 Load Secondary Data\n\n### Census\n\n```{r}\n\n```\n\n### Neighborhood (Polygon)\n\n```{r}\n\n```\n\n\n### City Centers (Amenities)\n\n```{r}\n\n```\n\n### Education\n\n```{r}\n\n```\n\n### Joining data together\n\n```{r}\n\n```\n\n\n# PHASE 2: EXPLORATORY DATA ANALYSIS\n\n### Distribution of sale prices (histogram)\n\n```{r}\nggplot(phl_sales_clean, aes(sale_price)) +\n  geom_histogram(bins = 60, fill = \"darkseagreen3\", color = \"black\") +\n  scale_x_continuous(labels = label_dollar()) +\n  labs(title = \"Distribution of Home Sale Prices\",\n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Sale Price\",\n       y = \"Count\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:** The histogram plot above shows the full distribution of home sale prices for residential properties in 2023-2024 from our cleaned dataset. The data is extremely right-skewed, highlighting a majority of prices under \\$500,000 with a long tail of more expensive homes thereafter. The main issue with the extreme outliers of home prices exceeding \\$5 million that make the visibility of this plot hard to interpret. Also, there are major gaps at higher sales prices as we see the data become more spread out, further indicating the presence of outliers. Therefore, to remedy this, we will plot a second histogram of the price distribution, excluding the top 5% of sales prices from the original cleaned dataset.\n\n```{r}\n# Create new df, filtering out the top 5% of house prices (outliers)\nprice_95_perc <- quantile(phl_sales_clean$sale_price, 0.95, na.rm = TRUE)\ndf_95_exclude <- filter(phl_sales_clean, sale_price <= price_95_perc)\n\n# Calculate the median / mean to plot (does not include top 5%)\nprice_median <- median(phl_sales_clean$sale_price, na.rm = TRUE)\nprice_mean <- mean(phl_sales_clean$sale_price, na.rm = TRUE)\n\nggplot(df_95_exclude, aes(sale_price)) +\n  geom_histogram(bins = 20, fill = \"darkseagreen3\", color = \"black\") +\n  geom_vline(xintercept = price_mean, linetype = 5) +\n  geom_vline(xintercept = price_median, linetype = 5) +\n  annotate(\"text\",\n           x = price_mean,\n           y = 1700,\n           label = \"Mean\", \n           hjust = - 0.1, \n           color = \"black\", \n           size = 3) +\n  annotate(\"text\",\n           x = price_median, \n           y = 2400, \n           label = \"Median\",\n           hjust = - 0.1, \n           color = \"black\", \n           size = 3) +\n  scale_x_continuous(labels = label_dollar()) +\n  labs(\n    title = \"Distribution of Home Sale Prices\",\n    subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n    caption = \"Histogram and median/mean statistics were computed on filtered sample (sale price â‰¤ 95th percentile) for better visibility.\",\n    x = \"Sale Price\",\n    y = \"Count\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  ) \n```\n\n**Interpretation:** In this revised histogram, we get a much better sense of how the sales prices are distributed without the presence of extreme outliers. As we saw before, the data is definitely right-skewed since the median (\\$ 235250) is less than the mean (\\$ 322231) even when removing large outliers from the top 5% of the distribution. We can visualize that the standard housing market in Philadelphia from 2023-2024 ranges between \\$0 and \\$800,000. The distribution has a single peak around \\$200,000, indicating that it is unimodal with a typical (or most common) home sale price in the realm of \\$150,000 to \\$250,000. This is an indication that it may be best to omit these significant outliers from our dataset when building our model for home sale price prediction. The homes on the higher end of the sale price distribution are determined by a combination of structural features (such total livable area) and spatial features (such as nearby city centers) that drive up the prices of these homes. The goal of this study is to determine what features, both structural and spatial, are significant in predicting home sale prices in Philadelphia and create an accurate model to help policy makers in valuating property tax assessments.\n\n### Geographic distribution (map)\n\n```{r}\n\n```\n\n**Interpretation:**\n\n### Price vs. structural features\n\n#### 1. Number of Bathrooms\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bathrooms), y = sale_price)) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Home Sale Prices by Number of Bathrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bathrooms\", \n       y = \"Sale Price\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:** Since number of bathrooms is a discrete variable, a scatter plot is not suitable to visualize this predictor's relationship with the target variable of sale price; therefore, we opted to use box plots instead. In this first plot, we see a distinct positive relationship between number of bathrooms and home sale price. Intuitively, this makes sense since homes with more bathrooms should on average sell at higher prices. Another trend is that there are more outliers in homes with less bathrooms (between 1 and 3). These outliers are likely due to external spatial factors such as neighborhoods. Housing prices tend to surge in highly desirable neighborhoods such as Rittenhouse Square, which explains the presence of many outliers plotted above the upper bound of these boxplots. Another trend is that variance of sale prices begins to significantly widen for homes with more than 3 bedrooms. This suggests that larger homes with more bathrooms experience more price dispersion relative to those with less bathrooms. Lastly, it is worth noting that there are very few observations of homes with 8 or 12 bathrooms, indicating that it would be beneficial to remove them from our dataset to better capture the true relationship between price and number of bathrooms.\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bathrooms), y = log(sale_price))) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Log(Home Sale Prices) by Number of Bathrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bathrooms\", \n       y = \"Log(Sale Price)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:** In addition, we also plotted with the y-axis transformed to the log of sales price. We notice that there is still a positive relationship that appears more linear than the first plot. The log transformation helps reduce the effect of extreme outliers by compressing the distribution of house sale prices. This transformation also serves to center the distributions as noted by the presence of both positive and negative outliers. These benefits suggest that log-transforming our target variable for a linear regression is the best suitable method to yield an accurate model. \n\n#### 2. Number of Bedrooms\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bedrooms), y = sale_price)) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Home Sale Prices by Number of Bedrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bedrooms\", \n       y = \"Sale Price\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bedrooms), y = log(sale_price))) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Log(Home Sale Prices) by Number of Bedrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bedrooms\", \n       y = \"Log(Sale Price)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:**\n\n#### 3. Total Livable Area\n\n```{r}\nggplot(phl_sales_clean, aes(x = total_livable_area, sale_price)) +\n  geom_point(alpha = 0.15, size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, color = \"black\") +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(title = \"Sale Price vs. Total Livable Area\",\n       x = \"Total Livable Area\", y = \"Sale Price\") +\n  theme_minimal()\n```\n\n```{r}\nggplot(phl_sales_clean, aes(x = log(total_livable_area), log(sale_price))) +\n  geom_point(alpha = 0.15, size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, color = \"black\") +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(title = \"Log(Sale Price) vs. Log(Total Livable Area)\",\n       x = \"Log(Total Livable Area)\", y = \"Log(Sale Price)\") +\n  theme_minimal()\n```\n\n#### 4. Year Built\n\n```{r}\nggplot(phl_sales_clean, aes(x = year_built, sale_price)) +\n  geom_point(alpha = 0.15, size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, color = \"black\") +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(title = \"Sale Price vs. Year Built\",\n       x = \"Year Built\", y = \"Sale Price\") +\n  theme_minimal()\n```\n\n\n### Price vs. spatial features (scatter plots)\n\n```{r}\n\n```\n\n**Interpretation:**\n\n### One creative visualization\n\n```{r}\n\n```\n\n**Interpretation:**\n\n\n# PHASE 3: FEATURE ENGINEERING\n\n### Age feature (sale date - year built)\n```{r}\nphl_sales_clean <- phl_sales_clean |>\n  mutate(\n    sale_year = year(sale_date),\n    age = sale_year - year_built\n  )\n```\n\n\n### Buffer-based features\n\n```{r}\n\n```\n\n### K-Nearest neighbors features\n\n```{r}\n\n```\n\n### Census variables\n\n```{r}\n\n```\n\n### Interaction terms\n\n```{r}\n\n```\n\n### Summary table\n\n```{r}\n\n```\n\n### Justification of feature engineered variables\n\n","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: False\n# Load packages\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(scales)\nlibrary(RColorBrewer)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(tigris)\nlibrary(patchwork)\nlibrary(here)\n\noptions(tigris_use_cache = TRUE, tigris_progress = FALSE) \n```\n\n# PHASE 1: DATA PREPARATION\n\n## 1.1 Load and Philadelphia house sales data\n```{r}\n# Load Philly Property Sales data\nphl_sales <- read_csv(\"../data/raw/opa_properties_public.csv\", show_col_types = FALSE)\n```\n\n### Filter to residential properties, 2023-2024 sales\n```{r}\n# Check data types\n# glimpse(phl_sales)\n\nphl_sales_res_23_24 <- phl_sales |>\n  filter(\n    category_code == 1, # Residential\n    year(sale_date) %in% c(2023, 2024), # 2023-24 sales\n    !is.na(category_code) & !is.na(sale_date) # Handle nulls\n  )\n```\n\n### Remove obvious errors\n```{r}\nphl_sales_clean <- phl_sales_res_23_24 |>\n  filter(\n    # Some sale_price are unrealistically too low ($0, $1 etc.)\n    sale_price >= 10000,\n    # Exclude homes with 0 bathrooms\n    number_of_bathrooms > 0,\n    # Some areas are unrealistically low (0, 1, etc.)\n    total_area > 1,\n    # Some 0's remain in total_liveable_area after first area filter\n    total_livable_area > 0,\n    # Filter our unrealistic year built\n    year_built >= 1750\n    ) \n```\n\n### Handle missing values\n\n```{r}\n# Check how many features have NA values\n# sum(is.na(phl_sales_clean$number_of_bedrooms))\n# sum(is.na(phl_sales_clean$number_of_bathrooms))\n# sum(is.na(phl_sales_clean$total_livable_area))\n# sum(is.na(phl_sales_clean$year_built))\n\n# Remove the 2 observations with NA values for number of bedrooms\nphl_sales_clean <- phl_sales_clean |>\n  filter(\n    !is.na(number_of_bedrooms)\n  )\n```\n\n\n### Document all cleaning decisions\n\n\n- Our methodology for cleaning the Philadelphia home sales data is to focus on the features used in our model. As a group, we decided on the following independent variables to consider in our data exploration and model building to be: number of bathrooms, number of bedrooms, total livable area, and year built. We recognize that there is some risk of collinearity between these structural features, which will later be monitored and addressed if needed in the model building stage. Additionally, we also had to clean the sales price column since this is the variable we aim to predict in our model.\n\n\n- Filter for only **residential properties** & **sales made in 2023-24** (per instructions).\n\n\n- Filter for **realistic sales price** >= $10,000.\n\n\n- Filter for houses with **at least 1 bathroom**. We will keep observations where **number of bedrooms = 0** as this likely signifies a studio apartment. However, it is not feasible for homes to have zero bathrooms, so we will enforce a constraint that a home must have at least 1 bathroom to preserve data integrity.\n\n\n- Filter for **realistic total area** > 1 sq ft & **realistic total livable area** > 0 sq ft.\n\n\n- Filter for **year built** >= 1750 (some homes were built in year 0).\n\n\n- **Handle missing values:** We removed any missing values in our dependent variable of sales price, since it is crucial we have a true and accurate measure for prediction. We also checked which of our predictor variables had NA values after filtering. Only number of bedrooms had 2 remaining NA values. The rest had no NA values. To remedy this, we will remove the 2 observations from our data. Note, if there was substantial missing values in our predictors, we could use strategies such as imputing the NA values with the mean or median to use when building our model. \n\n\n## 1.2 Load Secondary Data\n\n### Census\n\n```{r}\n\n```\n\n### Neighborhood (Polygon)\n\n```{r}\n\n```\n\n\n### City Centers (Amenities)\n\n```{r}\n\n```\n\n### Education\n\n```{r}\n\n```\n\n### Joining data together\n\n```{r}\n\n```\n\n\n# PHASE 2: EXPLORATORY DATA ANALYSIS\n\n### Distribution of sale prices (histogram)\n\n```{r}\nggplot(phl_sales_clean, aes(sale_price)) +\n  geom_histogram(bins = 60, fill = \"darkseagreen3\", color = \"black\") +\n  scale_x_continuous(labels = label_dollar()) +\n  labs(title = \"Distribution of Home Sale Prices\",\n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Sale Price\",\n       y = \"Count\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:** The histogram plot above shows the full distribution of home sale prices for residential properties in 2023-2024 from our cleaned dataset. The data is extremely right-skewed, highlighting a majority of prices under \\$500,000 with a long tail of more expensive homes thereafter. The main issue with the extreme outliers of home prices exceeding \\$5 million that make the visibility of this plot hard to interpret. Also, there are major gaps at higher sales prices as we see the data become more spread out, further indicating the presence of outliers. Therefore, to remedy this, we will plot a second histogram of the price distribution, excluding the top 5% of sales prices from the original cleaned dataset.\n\n```{r}\n# Create new df, filtering out the top 5% of house prices (outliers)\nprice_95_perc <- quantile(phl_sales_clean$sale_price, 0.95, na.rm = TRUE)\ndf_95_exclude <- filter(phl_sales_clean, sale_price <= price_95_perc)\n\n# Calculate the median / mean to plot (does not include top 5%)\nprice_median <- median(phl_sales_clean$sale_price, na.rm = TRUE)\nprice_mean <- mean(phl_sales_clean$sale_price, na.rm = TRUE)\n\nggplot(df_95_exclude, aes(sale_price)) +\n  geom_histogram(bins = 20, fill = \"darkseagreen3\", color = \"black\") +\n  geom_vline(xintercept = price_mean, linetype = 5) +\n  geom_vline(xintercept = price_median, linetype = 5) +\n  annotate(\"text\",\n           x = price_mean,\n           y = 1700,\n           label = \"Mean\", \n           hjust = - 0.1, \n           color = \"black\", \n           size = 3) +\n  annotate(\"text\",\n           x = price_median, \n           y = 2400, \n           label = \"Median\",\n           hjust = - 0.1, \n           color = \"black\", \n           size = 3) +\n  scale_x_continuous(labels = label_dollar()) +\n  labs(\n    title = \"Distribution of Home Sale Prices\",\n    subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n    caption = \"Histogram and median/mean statistics were computed on filtered sample (sale price â‰¤ 95th percentile) for better visibility.\",\n    x = \"Sale Price\",\n    y = \"Count\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  ) \n```\n\n**Interpretation:** In this revised histogram, we get a much better sense of how the sales prices are distributed without the presence of extreme outliers. As we saw before, the data is definitely right-skewed since the median (\\$ 235250) is less than the mean (\\$ 322231) even when removing large outliers from the top 5% of the distribution. We can visualize that the standard housing market in Philadelphia from 2023-2024 ranges between \\$0 and \\$800,000. The distribution has a single peak around \\$200,000, indicating that it is unimodal with a typical (or most common) home sale price in the realm of \\$150,000 to \\$250,000. This is an indication that it may be best to omit these significant outliers from our dataset when building our model for home sale price prediction. The homes on the higher end of the sale price distribution are determined by a combination of structural features (such total livable area) and spatial features (such as nearby city centers) that drive up the prices of these homes. The goal of this study is to determine what features, both structural and spatial, are significant in predicting home sale prices in Philadelphia and create an accurate model to help policy makers in valuating property tax assessments.\n\n### Geographic distribution (map)\n\n```{r}\n\n```\n\n**Interpretation:**\n\n### Price vs. structural features\n\n#### 1. Number of Bathrooms\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bathrooms), y = sale_price)) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Home Sale Prices by Number of Bathrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bathrooms\", \n       y = \"Sale Price\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:** Since number of bathrooms is a discrete variable, a scatter plot is not suitable to visualize this predictor's relationship with the target variable of sale price; therefore, we opted to use box plots instead. In this first plot, we see a distinct positive relationship between number of bathrooms and home sale price. Intuitively, this makes sense since homes with more bathrooms should on average sell at higher prices. Another trend is that there are more outliers in homes with less bathrooms (between 1 and 3). These outliers are likely due to external spatial factors such as neighborhoods. Housing prices tend to surge in highly desirable neighborhoods such as Rittenhouse Square, which explains the presence of many outliers plotted above the upper bound of these boxplots. Another trend is that variance of sale prices begins to significantly widen for homes with more than 3 bedrooms. This suggests that larger homes with more bathrooms experience more price dispersion relative to those with less bathrooms. Lastly, it is worth noting that there are very few observations of homes with 8 or 12 bathrooms, indicating that it would be beneficial to remove them from our dataset to better capture the true relationship between price and number of bathrooms.\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bathrooms), y = log(sale_price))) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Log(Home Sale Prices) by Number of Bathrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bathrooms\", \n       y = \"Log(Sale Price)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:** In addition, we also plotted with the y-axis transformed to the log of sales price. We notice that there is still a positive relationship that appears more linear than the first plot. The log transformation helps reduce the effect of extreme outliers by compressing the distribution of house sale prices. This transformation also serves to center the distributions as noted by the presence of both positive and negative outliers. These benefits suggest that log-transforming our target variable for a linear regression is the best suitable method to yield an accurate model. \n\n#### 2. Number of Bedrooms\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bedrooms), y = sale_price)) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Home Sale Prices by Number of Bedrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bedrooms\", \n       y = \"Sale Price\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n```{r}\nggplot(phl_sales_clean, aes(x = factor(number_of_bedrooms), y = log(sale_price))) +\n  geom_boxplot(outlier.color = \"firebrick\", outlier.alpha = 0.2) +\n  scale_y_continuous(labels = scales::label_dollar()) +\n  labs(title = \"Distribution of Log(Home Sale Prices) by Number of Bedrooms\", \n       subtitle = \"For Philadelphia Residential Properties in 2023-2024\",\n       x = \"Bedrooms\", \n       y = \"Log(Sale Price)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n**Interpretation:**\n\n#### 3. Total Livable Area\n\n```{r}\nggplot(phl_sales_clean, aes(x = total_livable_area, sale_price)) +\n  geom_point(alpha = 0.15, size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, color = \"black\") +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(title = \"Sale Price vs. Total Livable Area\",\n       x = \"Total Livable Area\", y = \"Sale Price\") +\n  theme_minimal()\n```\n\n```{r}\nggplot(phl_sales_clean, aes(x = log(total_livable_area), log(sale_price))) +\n  geom_point(alpha = 0.15, size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, color = \"black\") +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(title = \"Log(Sale Price) vs. Log(Total Livable Area)\",\n       x = \"Log(Total Livable Area)\", y = \"Log(Sale Price)\") +\n  theme_minimal()\n```\n\n#### 4. Year Built\n\n```{r}\nggplot(phl_sales_clean, aes(x = year_built, sale_price)) +\n  geom_point(alpha = 0.15, size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, color = \"black\") +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(title = \"Sale Price vs. Year Built\",\n       x = \"Year Built\", y = \"Sale Price\") +\n  theme_minimal()\n```\n\n\n### Price vs. spatial features (scatter plots)\n\n```{r}\n\n```\n\n**Interpretation:**\n\n### One creative visualization\n\n```{r}\n\n```\n\n**Interpretation:**\n\n\n# PHASE 3: FEATURE ENGINEERING\n\n### Age feature (sale date - year built)\n```{r}\nphl_sales_clean <- phl_sales_clean |>\n  mutate(\n    sale_year = year(sale_date),\n    age = sale_year - year_built\n  )\n```\n\n\n### Buffer-based features\n\n```{r}\n\n```\n\n### K-Nearest neighbors features\n\n```{r}\n\n```\n\n### Census variables\n\n```{r}\n\n```\n\n### Interaction terms\n\n```{r}\n\n```\n\n### Summary table\n\n```{r}\n\n```\n\n### Justification of feature engineered variables\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"appendix.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Technical Appendix"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}